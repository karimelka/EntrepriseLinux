# Samba configuration, managed by Ansible. Please don't edit manually
# {{ ansible_managed }}
#
# vim: ft=samba

[global]
 # Server information
 netbios name = {{ samba_netbios_name }}
 workgroup = {{ samba_workgroup|default('WORKGROUP') }}
 server string = {{ samba_server_string|default('Fileserver %m') }}

 # Logging
{% if samba_log is defined %}
 log file = {{ samba_log }}
 max log size = {{ samba_log_size|default('5000') }}
{% else %}
 syslog only = yes
 syslog = 1
{% endif %}

 # Authentication
 security = {{ samba_security|default('user') }}
 passdb backend = {{ samba_passdb_backend|default('tdbsam') }}
 map to guest = {{ samba_map_to_guest|default('bad user') }}

 # Name resolution: make sure \\NETBIOS_NAME\ works
 wins support = yes
 local master = yes
 domain master = yes
 preferred master = yes

{% if samba_load_printers is defined and samba_load_printers == 'no' %}
 # Don't load printers
 load printers = no
 printing = bsd
 printcap name = /dev/null
 disable spoolss = yes

{% endif %}
{% if samba_enable_homes is defined and samba_enable_homes == 'yes'%}
## Make home directories accessible
[homes]
 comment = Home Directories
 browseable = no
 writable = yes

{% endif %}
{% for share in samba_shares %}
[{{ share.name }}]
  comment = {{ share.comment|default(share.name) }}
  path = {{ samba_share_root }}/{{ share.name }}
  public = {{ share.public|default('no') }}
{% if share.valid_users is defined %}  valid users = {{ share.valid_users }}
{% endif %}
{% if share.write_list is defined %}  write list = {{ share.write_list }}
{% endif %}
{% if share.force_group is defined %}  force group = {{ share.force_group }}
{% endif %}
{% if share.create_mask is defined %}  create mask = {{ share.create_mask }}
{% endif %}
{% if share.create_mode is defined %}  create mode = {{ share.create_mode }}
{% endif %}
{% if share.force_create_mode is defined %}  force create mode = {{ share.force_create_mode }}
{% endif %}
{% if share.directory_mask is defined %}  directory mask = {{ share.directory_mask }}
{% endif %}
{% if share.directory_mode is defined %}  directory mode = {{ share.directory_mode }}
{% endif %}
{% if share.force_directory_mode is defined %}  force directory mode = {{ share.force_directory_mode }}
{% endif %}

{% endfor %}

